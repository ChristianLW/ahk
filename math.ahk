#SingleInstance
Window := Gui("+AlwaysOnTop -Caption +ToolWindow", "Math Input")
Window.BackColor := "101010"
Window.SetFont("s16")
Window.Add("Text", "y8 cE0E0E0", "Math Input")
Window.Show("h40 xCenter y1040 NoActivate")

Hook := InputHook("", "{Esc}{Enter}")
Hook.Start()
Hook.Wait()

if (Hook.EndKey == "Escape") {
	ExitApp()
}

switch (Hook.Input) {
	case "forall":    Send("∀")
	case "and":       Send("∧")
	case "approx":    Send("≈")
	case "cdots":     Send("⋯")
	case "contains":  Send("∋")
	case "ddots":     Send("⋱")
	case "emptyset":  Send("∅")
	case "exists":    Send("∃")
	case "ge":        Send("≥")
	case "iff":       Send("⟺")
	case "in":        Send("∈")
	case "inf":       Send("∞")
	case "int":       Send("∫")
	case "intersect": Send("∩")
	case "le":        Send("≤")
	case "mat":       Send("■")
	case "mp":        Send("∓")
	case "ncontains": Send("∌")
	case "ne":        Send("≠")
	case "nexists":   Send("∄")
	case "nin":       Send("∉")
	case "not":       Send("¬")
	case "nsubset":   Send("⊄")
	case "nsubseteq": Send("⊈")
	case "nsupset":   Send("⊅")
	case "nsupseteq": Send("⊉")
	case "odot":      Send("⊙")
	case "of":        Send("▒")
	case "ominus":    Send("⊖")
	case "oplus":     Send("⊕")
	case "or":        Send("∨")
	case "oslash":    Send("⊘")
	case "otimes":    Send("⊗")
	case "partial":   Send("∂")
	case "pm":        Send("±")
	case "prop":      Send("∝")
	case "rdots":     Send("⋰")
	case "ring":      Send("∘")
	case "sqrt":      Send("√")
	case "subset":    Send("⊂")
	case "subseteq":  Send("⊆")
	case "sum":       Send("∑")
	case "supset":    Send("⊃")
	case "supseteq":  Send("⊇")
	case "union":     Send("∪")
	case "vdots":     Send("⋮")
	case "vec":       Send("⃗")
	case "<=":        Send("⟸")
	case "=>":        Send("⟹")
	case "(":         Send("〖")
	case ")":         Send("〗")
}

ExitApp()
